@page "/blog/{urlHandle}"
@model Bloggie.Web.Pages.Blog.DetailsModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager

@{
	ViewData["Title"] = Model.BlogPost.PageTitle;
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">
			@if (Model.BlogPost != null)
			{
				<h1 class="mb-3">@Model.BlogPost.Heading</h1>

				<div class="d-flex justify-content-between mb-3">
					<span class="text-secondary">@Model.BlogPost.Author</span>
					<span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
				</div>

				<div class="mb-3">
					<span>
						@if (Model.Liked)
						{
							<a id="btnLike" style="cursor: pointer">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnLike" style="cursor: pointer">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}
						
						<span id="totalLikes">@Model.TotalLikes</span> likes
					</span>
				</div>

				<div class="mb-3">
					@if (Model.BlogPost.Tags != null)
					{
						foreach (var tag in Model.BlogPost.Tags)
						{
							<a href="/tags/@tag.Name" class="text-decoration-none">
								<span class="badge bg-dark">@tag.Name</span>
							</a>

						}
					}
				</div>

				<img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" />

				<div class="mb-3 blog-details">
					@Html.Raw(Model.BlogPost.Content)
				</div>
			}
			else
			{
				<h2>Blog Post not found!</h2>
			}

		</div>
	</div>
</div>

@section Scripts{
	<script>
		const btnLike = document.getElementById('btnLike');
		const totalLikesElement = document.getElementById('totalLikes');

		async function getTotalLikes(){
			fetch('/api/blogpostlike/@Model.BlogPost.Id/totallikes',
			{
				method: 'GET',
				headers: {
					'Content-Type': 'appication/json',
					'Accept': '*/*'
				}
			})
			.then(data => data.json())
			.then(result => totalLikesElement.innerHTML = result);
		}

		async function addLikeForBlog()
		{
			fetch('/api/blogpostlike/add', {
				method: 'Post',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				},
				body: JSON.stringify({ blogPostId: '@Model.BlogPost.Id', UserId: '@userManager.GetUserId(User)'})
			}).then(() => {
				btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
				btnLike.removeEventListener('click', addLikeForBlog);
				getTotalLikes();
			});
		}
		if (!Model.Liked)
		{
			btnLike.addEventListener('click', addLikeForBlog);			
		}		

	</script>
}